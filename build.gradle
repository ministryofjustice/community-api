plugins {
    id("uk.gov.justice.hmpps.gradle-spring-boot") version "8.3.0"
    id 'groovy'
    id 'org.unbroken-dome.test-sets' version '4.1.0'
    id "com.google.cloud.tools.jib" version "3.4.5"
}

group = 'uk.gov.justice.digital.delius'

testSets {
    testIntegration
}

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}
check.dependsOn(testIntegration)

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-ldap'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'com.oracle.database.jdbc:ojdbc11'
    implementation 'com.unboundid:unboundid-ldapsdk'
    implementation 'org.flywaydb:flyway-core'
    implementation 'com.zaxxer:HikariCP'
    implementation 'io.jsonwebtoken:jjwt-impl:0.12.6'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.12.6'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.9'
    implementation 'org.apache.commons:commons-lang3:3.17.0'
    implementation 'org.apache.commons:commons-text:1.13.1'
    implementation 'io.vavr:vavr:0.10.6'
    implementation 'com.github.java-json-tools:json-patch:1.13'
    implementation 'io.sentry:sentry-spring-boot-starter-jakarta:8.16.0'

    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    compileOnly 'org.projectlombok:lombok'

    runtimeOnly 'com.h2database:h2:2.3.232'
    testRuntimeOnly 'com.h2database:h2:2.3.232'
    testAnnotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'

    testImplementation 'io.rest-assured:rest-assured'
    testImplementation 'io.rest-assured:spring-mock-mvc'
    testIntegrationImplementation 'com.github.tomakehurst:wiremock-jre8-standalone:3.0.1'
}

testIntegration {
    if (project.hasProperty("testFilter")) {
        List<String> props = project.getProperties().get("testFilter").split("\\s+")
        props.each {
            include(it.replace("src/testIntegration/java/", "**/").replace(".java", ".class"))
        }
    }
    timeout.set(Duration.ofMinutes(15))
    useJUnitPlatform()
    testLogging {
        events "started", "passed", "skipped", "failed", "standardError"
        exceptionFormat "short"
        showStackTraces = true
        showExceptions = true
        showCauses = true
    }
    minHeapSize = "128m"
    maxHeapSize = "1536m"
    jvmArgs = ["--add-opens", "java.naming/com.sun.jndi.ldap=ALL-UNNAMED"]
}

repositories {
    mavenCentral()
}

tasks.register('copyAgentJar', Copy) {
    from("${project.buildDir}/libs")
    include("applicationinsights-agent*.jar")
    into("${project.buildDir}/agent")
    rename("applicationinsights-agent(.+).jar", "agent.jar")
}
copyAgentJar.dependsOn(assemble)

jib {
    container {
        mainClass = "uk.gov.justice.digital.delius.DeliusOffenderAPI"
        jvmFlags = ["-Duser.timezone=Europe/London"]
        user = "2000:2000"
    }
    from {
        image = "eclipse-temurin:21-jre-jammy"
        platforms {
            platform {
                architecture = 'amd64'
                os = 'linux'
            }
            platform {
                architecture = 'arm64'
                os = 'linux'
            }
        }
    }
    extraDirectories {
        paths {
            path {
                setFrom("${project.buildDir}")
                includes.add("agent/agent.jar")
            }
            path {
                setFrom("${project.rootDir}")
                includes.add("applicationinsights*.json")
                into = "/agent"
            }
        }
    }
}

tasks.getByName("jib").dependsOn(copyAgentJar)
jibBuildTar.dependsOn(copyAgentJar)
jibDockerBuild.dependsOn(copyAgentJar)
