defaults: &defaults
  working_directory: ~/app
  environment:
    JAVA_TOOL_OPTIONS: -Xmx1024m -XX:ParallelGCThreads=2 -XX:ConcGCThreads=2 -XX:ParallelGCThreads=2 -Djava.util.concurrent.ForkJoinPool.common.parallelism=2

_snyk_options: &snyk_options
  organization: "digital-probation-services"
  severity-threshold: "high" # note: this does not affect snyk 'monitor' commands
  fail-on-issues: true

version: 2.1

orbs:
  mem: circleci/rememborb@0.0.1
  snyk: snyk/snyk@0.0.10

executors:
  builder:
    <<: *defaults
    docker:
      - image: circleci/openjdk:11-jdk
    working_directory: ~/app
  deployer:
    docker:
      - image: circleci/python:3
    working_directory: ~/app

commands:
  set_app_version:
    description: "Set app version string"
    steps:
      - run:
          name: create app version string
          command: |
            jar xvf build/libs/community-api-*.jar BOOT-INF/classes/META-INF/build-info.properties
            VERSION=$(grep 'build.version=' BOOT-INF/classes/META-INF/build-info.properties | awk -F= '{print $2}')
            rm BOOT-INF/classes/META-INF/build-info.properties
            FULL_VERSION=${VERSION}.${CIRCLE_BRANCH}
            if [[ "${CIRCLE_BRANCH}" == "master" ]]; then
              FULL_VERSION=${VERSION}
            fi
            echo "export APP_VERSION=$FULL_VERSION" >> $BASH_ENV
      - mem/remember:
          env_var: APP_VERSION
          value: "${APP_VERSION}"

jobs:
  build:
    executor: builder
    steps:
      - checkout
      - restore_cache:
          keys:
            - gradle-{{ checksum "build.gradle" }}
            - gradle-
      - run: ./gradlew build
      - set_app_version
      - save_cache:
          paths:
            - ~/.gradle
          key: gradle-{{ checksum "build.gradle" }}
      - store_test_results:
          path: build/test-results
      - store_artifacts:
          path: build/reports/tests
      - persist_to_workspace:
          root: .
          paths:
            - build/libs
            - build.gradle
  build_docker:
    executor: deployer
    parameters:
      master:
        type: boolean
        default: false
    steps:
      - checkout
      - attach_workspace:
          at: ~/app
      - setup_remote_docker:
          docker_layer_caching: true
      - mem/recall:
          env_var: APP_VERSION
      - run:
          name: Build docker image
          command: |
            docker build -f docker/Dockerfile.aws --rm=false . \
               --tag "mojdigitalstudio/community-api:$APP_VERSION" \
               --label "maintainer=info@digital.justice.gov.uk" \
               --label "app.version=$APP_VERSION" \
               --label "build.version=$APP_VERSION" \
               --label "build.number=$CIRCLE_BUILD_NUM" \
               --label "build.url=$CIRCLE_BUILD_URL" \
               --label "build.gitref=$CIRCLE_SHA1"
      - snyk/scan:
          project: '${CIRCLE_PROJECT_REPONAME}-docker/${CIRCLE_BRANCH}'
          docker-image-name: 'mojdigitalstudio/community-api:$APP_VERSION'
          target-file: 'Dockerfile'
          monitor-on-build: << parameters.master >>
          <<: *snyk_options
      - when:
          condition: << parameters.master >>
          steps:
            - run:
                name: Publish to docker hub
                command: |
                  docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
                  docker tag mojdigitalstudio/community-api:$APP_VERSION mojdigitalstudio/community-api:latest
                  docker push mojdigitalstudio/community-api:$APP_VERSION
                  docker push mojdigitalstudio/community-api:latest

  app_scan:
    executor: builder
    parameters:
      master:
        type: boolean
        default: false
    steps:
      - checkout
      - snyk/scan:
          project: '${CIRCLE_PROJECT_REPONAME}/${CIRCLE_BRANCH}'
          monitor-on-build: << parameters.master >>
          <<: *snyk_options

  image_scan:
    executor: deployer
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - snyk/scan:
          project: '${CIRCLE_PROJECT_REPONAME}-docker/${CIRCLE_BRANCH}'
          docker-image-name: 'mojdigitalstudio/community-api:latest'
          target-file: 'Dockerfile'
          monitor-on-build: true
          <<: *snyk_options

workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - build:
          filters:
            tags:
              ignore: /.*/
      - app_scan:
          filters:
            branches:
              ignore: master
      - app_scan:
          name: app_scan_master
          filters:
            branches:
              only: master
          master: true
      - build_docker:
          requires:
            - build
          filters:
            branches:
              ignore: master
      - build_docker:
          name: build_docker_master
          requires:
            - build
          filters:
            branches:
              only: master
          master: true

  scheduled:
    triggers:
      - schedule:
          cron: "0 7 * * 1-5"
          filters:
            branches:
              only:
                - master
    jobs:
      - app_scan:
          master: true
      - image_scan

