version: 2.1

orbs:
  hmpps: ministryofjustice/hmpps@7
  mem: circleci/rememborb@0.0.1
  jira: circleci/jira@1.3.1

jobs:
  validate-unit:
    executor:
      name: hmpps/java
      tag: "21.0"
    environment:
      _JAVA_OPTIONS: -Xmx1024m -XX:ParallelGCThreads=2 -XX:ConcGCThreads=2 -XX:ParallelGCThreads=2 -Djava.util.concurrent.ForkJoinPool.common.parallelism=2 -Dorg.gradle.daemon=false
    steps:
      - checkout
      - restore_cache:
          keys:
            - gradle-{{ checksum "build.gradle" }}
            - gradle-
      - run:
          command: ./gradlew check --exclude-task testIntegration
      - save_cache:
          paths:
            - ~/.gradle
          key: gradle-{{ checksum "build.gradle" }}
      - store_test_results:
          path: build/test-results
      - store_artifacts:
          path: build/reports/tests
      - jira/notify
  validate-integration:
    executor:
      name: hmpps/java
      tag: "21.0"
    parallelism: 4
    environment:
      _JAVA_OPTIONS: -Xmx1536m -XX:ParallelGCThreads=2 -XX:ConcGCThreads=2 -XX:ParallelGCThreads=2 -Djava.util.concurrent.ForkJoinPool.common.parallelism=2 -Dorg.gradle.daemon=false
    steps:
      - checkout
      - restore_cache:
          keys:
            - gradle-{{ checksum "build.gradle" }}
            - gradle-
      - run:
          command: |
            circleci tests glob "src/testIntegration/**/*.java" | circleci tests split | xargs -n 1 echo
      - run:
          command: ./gradlew testIntegration -PtestFilter="`circleci tests glob "src/testIntegration/**/*.java" | circleci tests split`"
      - save_cache:
          paths:
            - ~/.gradle
          key: gradle-{{ checksum "build.gradle" }}
      - store_test_results:
          path: build/test-results
      - store_artifacts:
          path: build/reports/tests
      - jira/notify
  jib-build:
    executor:
      name: hmpps/java
      tag: "21.0"
    environment:
      _JAVA_OPTIONS: -Xmx1024m -XX:ParallelGCThreads=2 -XX:ConcGCThreads=2 -XX:ParallelGCThreads=2 -Djava.util.concurrent.ForkJoinPool.common.parallelism=2 -Dorg.gradle.daemon=false
    parameters:
      image_name:
        type: string
        default: "quay.io/hmpps/${CIRCLE_PROJECT_REPONAME}"
      jira_update:
        type: boolean
        default: false
        description: When true, updates any referenced Jira tickets with build status. Note that Jira integration must be enabled in your CircleCI project settings.
    steps:
      - checkout
      - run:
          name: Create app version string
          command: |
            DATE=$(date '+%Y-%m-%d')
            SHORT_SHA1=$(echo $CIRCLE_SHA1 | cut -c1-7)
            VERSION=${DATE}.${CIRCLE_BUILD_NUM}.${SHORT_SHA1}
            echo "Created version string: ${VERSION}"
            echo "export VERSION=$VERSION" >> $BASH_ENV
      - mem/remember:
          env_var: APP_VERSION
          value: "${VERSION}"
      - run:
          name: Create IMAGE_NAME env var
          command: |
            IMAGE_NAME="<< parameters.image_name >>"
            echo "export IMAGE_NAME=$IMAGE_NAME" >> $BASH_ENV
      - mem/remember:
          env_var: IMAGE_NAME
          value: "${IMAGE_NAME}"
      - run:
          name: Build container image and publish
          command: |
            TAGS=""
            if [ "$CIRCLE_BRANCH" = "main" ]; then
              TAGS="-Djib.to.tags=latest"
            fi
            ./gradlew jib --image="${IMAGE_NAME}:${APP_VERSION}" -Djib.to.auth.username=${QUAYIO_USERNAME} -Djib.to.auth.password=${QUAYIO_PASSWORD} $TAGS
      - when:
          condition: << parameters.jira_update >>
          steps:
            - jira/notify

workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - validate-unit:
          context: hmpps-common-vars
          filters:
            tags:
              ignore: /.*/
      - validate-integration:
          context: hmpps-common-vars
          filters:
            tags:
              ignore: /.*/
      - jib-build:
          context: hmpps-common-vars
          filters:
            tags:
              ignore: /.*/
      - hmpps/deploy_env:
          name: deploy_test
          env: "test"
          jira_update: true
          context: hmpps-common-vars
          filters:
            branches:
              only:
                - main
          requires:
            - jib-build
      - hmpps/deploy_env:
          name: deploy_preprod
          env: "preprod"
          jira_update: true
          jira_env_type: staging
          context:
            - hmpps-common-vars
            - hmpps-delius-core-preprod
          filters:
            branches:
              only:
                - main
          requires:
            - jib-build
      - request-prod-approval:
          type: approval
          requires:
            - deploy_test
            - deploy_preprod
      - hmpps/deploy_env:
          name: deploy_prod
          env: "prod"
          jira_update: true
          jira_env_type: production
          slack_notification: true
          slack_channel_name: probation-integration-notifications
          context:
            - hmpps-common-vars
            - hmpps-delius-core-prod
          requires:
            - request-prod-approval

  security:
    triggers:
      - schedule:
          cron: "30 5 * * 1-5" # Every weekday at 05:30 UTC
          filters:
            branches:
              only:
                - main
    jobs:
      - hmpps/veracode_policy_scan:
          context:
            - veracode-credentials
            - hmpps-common-vars

