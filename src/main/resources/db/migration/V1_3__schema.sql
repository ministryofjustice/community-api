CREATE TABLE R_AD_RQMNT_TYPE_MAIN_CATEGORY
(
  AD_RQMNT_TYPE_MAIN_CATEGORY_ID NUMBER        NOT NULL
    PRIMARY KEY,
  CODE                           VARCHAR2(20)  NOT NULL,
  DESCRIPTION                    VARCHAR2(200) NOT NULL
);

CREATE TABLE R_RQMNT_TYPE_MAIN_CATEGORY
(
  RQMNT_TYPE_MAIN_CATEGORY_ID NUMBER        NOT NULL
    PRIMARY KEY,
  CODE                        VARCHAR2(20)  NOT NULL,
  DESCRIPTION                 VARCHAR2(200) NOT NULL
);

CREATE TABLE EVENT
(
  EVENT_ID  NUMBER NOT NULL
    PRIMARY KEY,
  IN_BREACH NUMBER NOT NULL
);

CREATE TABLE R_NSI_TYPE
(
  NSI_TYPE_ID NUMBER        NOT NULL
    PRIMARY KEY,
  CODE        VARCHAR2(20)  NOT NULL,
  DESCRIPTION VARCHAR2(200) NOT NULL
);

CREATE TABLE RQMNT
(
  RQMNT_ID                       NUMBER NOT NULL
    PRIMARY KEY,
  START_DATE                     DATE   NOT NULL,
  RQMNT_NOTES                    CLOB,
  COMMENCEMENT_DATE              DATE,
  TERMINATION_DATE               DATE,
  EXPECTED_START_DATE            DATE,
  EXPECTED_END_DATE              DATE,
  RQMNT_TYPE_SUB_CATEGORY_ID     NUMBER
    REFERENCES R_STANDARD_REFERENCE_LIST,
  AD_RQMNT_TYPE_SUB_CATEGORY_ID  NUMBER
    REFERENCES R_STANDARD_REFERENCE_LIST,
  RQMNT_TYPE_MAIN_CATEGORY_ID    NUMBER
    REFERENCES R_RQMNT_TYPE_MAIN_CATEGORY,
  AD_RQMNT_TYPE_MAIN_CATEGORY_ID NUMBER
    REFERENCES R_AD_RQMNT_TYPE_MAIN_CATEGORY,
  OFFENDER_ID                    NUMBER NOT NULL
    REFERENCES OFFENDER
);


CREATE TABLE NSI
(
  NSI_ID          NUMBER NOT NULL
    PRIMARY KEY,
  OFFENDER_ID     NUMBER NOT NULL
    REFERENCES OFFENDER,
  EVENT_ID        NUMBER
    REFERENCES EVENT,
  NSI_TYPE_ID     NUMBER NOT NULL
    REFERENCES R_NSI_TYPE,
  NSI_SUB_TYPE_ID NUMBER
    REFERENCES R_STANDARD_REFERENCE_LIST,
  NOTES           CLOB,
  RQMNT_ID        NUMBER
    REFERENCES RQMNT
);

CREATE TABLE R_LIC_COND_TYPE_MAIN_CAT
(
  LIC_COND_TYPE_MAIN_CAT_ID NUMBER        NOT NULL
    PRIMARY KEY,
  CODE                      VARCHAR2(100) NOT NULL,
  DESCRIPTION               VARCHAR2(200)
);

CREATE TABLE R_CONTACT_OUTCOME_TYPE
(
  CONTACT_OUTCOME_TYPE_ID NUMBER       NOT NULL
    PRIMARY KEY,
  CODE                    VARCHAR2(10) NOT NULL,
  DESCRIPTION             VARCHAR2(50) NOT NULL
);

CREATE TABLE R_CONTACT_TYPE
(
  CONTACT_TYPE_ID   NUMBER         NOT NULL
    PRIMARY KEY,
  CODE              VARCHAR2(10)   NOT NULL,
  DESCRIPTION       VARCHAR2(4000) NOT NULL,
  SHORT_DESCRIPTION VARCHAR2(500)
);


CREATE TABLE LIC_CONDITION
(
  LIC_CONDITION_ID          NUMBER NOT NULL
    PRIMARY KEY,
  START_DATE                DATE   NOT NULL,
  LIC_CONDITION_NOTES       CLOB,
  COMMENCEMENT_DATE         DATE,
  COMMENCEMENT_NOTES        CLOB,
  TERMINATION_DATE          DATE,
  TERMINATION_NOTES         CLOB,
  EXPECTED_START_DATE       DATE,
  EXPECTED_END_DATE         DATE,
  LIC_COND_TYPE_SUB_CAT_ID  NUMBER
    REFERENCES R_STANDARD_REFERENCE_LIST,
  CREATED_DATETIME          DATE   NOT NULL,
  LIC_COND_TYPE_MAIN_CAT_ID NUMBER
    REFERENCES R_LIC_COND_TYPE_MAIN_CAT,
  OFFENDER_ID               NUMBER NOT NULL
    REFERENCES OFFENDER,
  ACTIVE_FLAG               NUMBER NOT NULL
);

CREATE TABLE R_EXPLANATION
(
  EXPLANATION_ID NUMBER        NOT NULL
    PRIMARY KEY,
  CODE           VARCHAR2(10)  NOT NULL,
  DESCRIPTION    VARCHAR2(100) NOT NULL
);


CREATE TABLE CONTACT
(
  CONTACT_ID            NUMBER NOT NULL
    PRIMARY KEY,
  LINKED_CONTACT_ID     NUMBER
    REFERENCES CONTACT,
  CONTACT_DATE          DATE   NOT NULL,
  OFFENDER_ID           NUMBER NOT NULL
    REFERENCES OFFENDER,
  CONTACT_START_TIME    DATE,
  CONTACT_END_TIME      DATE,
  RQMNT_ID              NUMBER
    REFERENCES RQMNT,
  LIC_CONDITION_ID      NUMBER
    REFERENCES LIC_CONDITION,
  NOTES                 CLOB,
  ALERT_ACTIVE          CHAR,
  CREATED_DATETIME      DATE   NOT NULL,
  LAST_UPDATED_DATETIME DATE   NOT NULL,
  EVENT_ID              NUMBER
    REFERENCES EVENT,
  CONTACT_TYPE_ID       NUMBER NOT NULL
    REFERENCES R_CONTACT_TYPE,
  EXPLANATION_ID        NUMBER
    REFERENCES R_EXPLANATION,
  LAST_UPDATED_USER_ID  NUMBER NOT NULL,
  NSI_ID                NUMBER
    REFERENCES NSI,
  NOMIS_CASE_NOTE_ID    NUMBER
);