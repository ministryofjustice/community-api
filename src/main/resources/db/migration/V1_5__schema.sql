CREATE TABLE OFFICER
(
  TRUST_PROVIDER_FLAG NUMBER not null
    constraint TRUE_OR_FALSE69
      check (TRUST_PROVIDER_FLAG IN (0, 1)),
  STAFF_EMPLOYEE_ID NUMBER not null,
  SURNAME VARCHAR2(35) not null,
  FORENAME VARCHAR2(35) not null,
  FORENAME2 VARCHAR2(35),
  ROW_VERSION NUMBER default 0 not null,
  TRAINING_SESSION_ID NUMBER,
  STAFF_GRADE_ID NUMBER
    references R_STANDARD_REFERENCE_LIST,
  START_DATE DATE not null,
  END_DATE DATE not null,
  constraint XPKOFFICER
    primary key (TRUST_PROVIDER_FLAG, STAFF_EMPLOYEE_ID)
);



CREATE TABLE OFFENDER_TRANSFER
(
  OFFENDER_TRANSFER_ID NUMBER not null
    constraint XPKOFFENDER_TRANSFER
      primary key,
  PARTITION_AREA_ID NUMBER not null
    references PARTITION_AREA,
  SOFT_DELETED NUMBER not null
    constraint TRUE_OR_FALSE24
      check (SOFT_DELETED IN (0, 1)),
  REQUEST_DATE DATE,
  ROW_VERSION NUMBER default 0 not null,
  OFFENDER_ID NUMBER not null
    references OFFENDER,
  TRANSFER_STATUS_ID NUMBER not null
    references R_STANDARD_REFERENCE_LIST,
  ACCEPTED_DECISION_ID NUMBER
    references R_STANDARD_REFERENCE_LIST,
  REJECTION_REASON_ID NUMBER
    references R_STANDARD_REFERENCE_LIST,
  NOTES CLOB,
  CREATED_DATETIME DATE not null,
  LAST_UPDATED_DATETIME DATE not null,
  TRANSFER_REASON_ID NUMBER not null,
  ALLOCATION_REASON_ID NUMBER
    references R_STANDARD_REFERENCE_LIST,
  ORIGIN_TEAM_ID NUMBER
    references TEAM,
  ORIGIN_STAFF_ID NUMBER
    references STAFF,
  ORIGIN_PROVIDER_EMPLOYEE_ID NUMBER,
  ORIGIN_PROVIDER_TEAM_ID NUMBER
    references PROVIDER_TEAM,
  RECEIVING_TEAM_ID NUMBER
    references TEAM,
  RECEIVING_STAFF_ID NUMBER
    references STAFF,
  RECEIVING_PROVIDER_EMPLOYEE_ID NUMBER
    references PROVIDER_EMPLOYEE,
  CREATED_BY_USER_ID NUMBER not null,
  RECEIVING_PROVIDER_TEAM_ID NUMBER
    references PROVIDER_TEAM,
  LAST_UPDATED_USER_ID NUMBER not null,
  TRAINING_SESSION_ID NUMBER,
  ORGANISATIONS T_ARR_ORGANISATIONS,
  WITHDRAWAL_REASON_ID NUMBER
    constraint R_1054
      references R_STANDARD_REFERENCE_LIST,
  TRANSFER_STATUS_DATE DATE,
  MASTER_TRANSFER_ID NUMBER,
  constraint OFFENDER_TRANS_ORGIN_STAFF_XO
    check ( (
        (ORIGIN_STAFF_ID IS NOT NULL AND ORIGIN_PROVIDER_EMPLOYEE_ID IS NULL)
        OR
        (ORIGIN_STAFF_ID IS NULL AND ORIGIN_PROVIDER_EMPLOYEE_ID IS NOT NULL)
      )),
  constraint OFFENDER_TRANS_ORGIN_TEAM_XOR
    check ( (
        (ORIGIN_TEAM_ID IS NOT NULL AND ORIGIN_PROVIDER_TEAM_ID IS NULL)
        OR
        (ORIGIN_TEAM_ID IS NULL AND ORIGIN_PROVIDER_TEAM_ID IS NOT NULL)
      )),
  constraint OFFENDER_TRANS_REC_STAFF_XOR
    check ( (
        (RECEIVING_STAFF_ID IS NOT NULL AND RECEIVING_PROVIDER_EMPLOYEE_ID IS NULL)
        OR
        (RECEIVING_STAFF_ID IS NULL AND RECEIVING_PROVIDER_EMPLOYEE_ID IS NOT NULL)
      )),
  constraint OFFENDER_TRANS_REC_TEAM_XOR
    check ( (
        (RECEIVING_TEAM_ID IS NOT NULL AND RECEIVING_PROVIDER_TEAM_ID IS NULL)
        OR
        (RECEIVING_TEAM_ID IS NULL AND RECEIVING_PROVIDER_TEAM_ID IS NOT NULL)
      ))
);

CREATE TABLE OFFENDER_MANAGER
(
  OFFENDER_MANAGER_ID NUMBER not null
    constraint XPKOFFENDER_MANAGER
      primary key,
  ALLOCATION_DATE DATE not null,
  END_DATE DATE,
  TEAM_ID NUMBER
    references TEAM,
  ALLOCATION_STAFF_ID NUMBER
    references STAFF,
  PARTITION_AREA_ID NUMBER not null
    references PARTITION_AREA,
  OFFENDER_ID NUMBER not null
    references OFFENDER,
  SOFT_DELETED NUMBER not null
    constraint TRUE_OR_FALSE47
      check (SOFT_DELETED IN (0, 1)),
  ROW_VERSION NUMBER default 0 not null,
  ALLOCATION_REASON_ID NUMBER not null
    references R_STANDARD_REFERENCE_LIST,
  PROVIDER_EMPLOYEE_ID NUMBER
    references PROVIDER_EMPLOYEE,
  OFFENDER_TRANSFER_ID NUMBER
    references OFFENDER_TRANSFER,
  PROVIDER_TEAM_ID NUMBER
    references PROVIDER_TEAM,
  TRAINING_SESSION_ID NUMBER,
  TRUST_PROVIDER_FLAG NUMBER not null
    constraint TRUE_OR_FALSE49
      check (TRUST_PROVIDER_FLAG IN (0, 1)),
  STAFF_EMPLOYEE_ID NUMBER not null,
  PROBATION_AREA_ID NUMBER not null
    references PROBATION_AREA,
  TRUST_PROVIDER_TEAM_ID NUMBER not null,
  ACTIVE_FLAG NUMBER not null,
  CREATED_BY_USER_ID NUMBER not null,
  CREATED_DATETIME DATE not null,
  LAST_UPDATED_USER_ID NUMBER not null,
  LAST_UPDATED_DATETIME DATE not null,
  foreign key (TRUST_PROVIDER_FLAG, STAFF_EMPLOYEE_ID) references OFFICER,
  constraint ACTIVE_FLAG_END_DATE4
    check ( (ACTIVE_FLAG = 0 AND END_DATE IS NOT NULL)
      OR
            (ACTIVE_FLAG = 1 AND END_DATE IS NULL)
      ),
  constraint OFFENDER_MANAGER_TEAM_XOR5
    check ( (
        (TEAM_ID IS NOT NULL AND PROVIDER_TEAM_ID IS NULL)
        OR
        (TEAM_ID IS NULL AND PROVIDER_TEAM_ID IS NOT NULL)
      )),
  constraint OFFENDER_MANAGER_XOR
    check ( (
        (PROVIDER_EMPLOYEE_ID IS NOT NULL  AND ALLOCATION_STAFF_ID IS NULL)
        OR
        (PROVIDER_EMPLOYEE_ID IS NULL  AND ALLOCATION_STAFF_ID IS NOT NULL)
      )),
  constraint STAFF_OR_TEAM21
    check ( (
          STAFF_EMPLOYEE_ID = ALLOCATION_STAFF_ID
        OR
          STAFF_EMPLOYEE_ID = PROVIDER_EMPLOYEE_ID
      )),
  constraint TRUST_OR_PROVIDER5
    check ( (
          TRUST_PROVIDER_TEAM_ID = TEAM_ID
        OR
          TRUST_PROVIDER_TEAM_ID = PROVIDER_TEAM_ID
      ))
);



CREATE TABLE EXTERNAL_PROVIDER
(
  EXTERNAL_PROVIDER_ID NUMBER not null
    constraint XPKEXTERNAL_PROVIDER
      primary key,
  CODE VARCHAR2(20) not null,
  DESCRIPTION VARCHAR2(50) not null,
  CONTACT_NAME VARCHAR2(200),
  FAX_NUMBER VARCHAR2(35),
  ROW_VERSION NUMBER default 0 not null,
  ADDRESS_ID NUMBER,
  START_DATE DATE not null,
  END_DATE DATE,
  CREATED_BY_USER_ID NUMBER not null,
  CREATED_DATETIME DATE not null,
  LAST_UPDATED_USER_ID NUMBER not null,
  LAST_UPDATED_DATETIME DATE not null,
  TRAINING_SESSION_ID NUMBER,
  constraint XAK1EXTERNAL_PROVIDER
    unique (CODE, TRAINING_SESSION_ID, EXTERNAL_PROVIDER_ID),
  constraint PROVIDER_LOCATION_DATE_VALID5
    check ( (
        (START_DATE <= END_DATE) OR (END_DATE IS NULL)
      ))
);

CREATE TABLE BOROUGH
(
  BOROUGH_ID        NUMBER       NOT NULL
    PRIMARY KEY,
  CODE              VARCHAR2(20) NOT NULL,
  DESCRIPTION       VARCHAR2(30) NOT NULL,
  SELECTABLE        CHAR         NOT NULL,
  PROBATION_AREA_ID NUMBER       NOT NULL
    REFERENCES PROBATION_AREA
);

CREATE TABLE DISTRICT
(
  DISTRICT_ID NUMBER       NOT NULL
    PRIMARY KEY,
  CODE        VARCHAR2(20) NOT NULL,
  DESCRIPTION VARCHAR2(30) NOT NULL,
  SELECTABLE  CHAR         NOT NULL,
  BOROUGH_ID  NUMBER       NOT NULL
    REFERENCES BOROUGH
);

CREATE TABLE ALL_TEAM
(
  TRUST_PROVIDER_FLAG    NUMBER NOT NULL,
  TRUST_PROVIDER_TEAM_ID NUMBER NOT NULL,
  PROBATION_AREA_ID      NUMBER
    REFERENCES PROBATION_AREA,
  DESCRIPTION            VARCHAR2(500),
  TELEPHONE              VARCHAR2(35),
  DISTRICT_ID            NUMBER
    REFERENCES DISTRICT,
  START_DATE             DATE   NOT NULL,
  END_DATE               DATE   NOT NULL
);


create table OFFICE_LOCATION
(
  OFFICE_LOCATION_ID NUMBER not null
    constraint XPKOFFICE_LOCATION
      primary key,
  CODE CHAR(7) not null,
  DESCRIPTION VARCHAR2(50) not null,
  DISTRICT_ID NUMBER not null,
  BUILDING_NAME VARCHAR2(35),
  BUILDING_NUMBER VARCHAR2(35),
  STREET_NAME VARCHAR2(35),
  TOWN_CITY VARCHAR2(35),
  COUNTY VARCHAR2(35),
  POSTCODE VARCHAR2(8),
  START_DATE DATE not null,
  END_DATE DATE,
  FAX_NUMBER VARCHAR2(35),
  TELEPHONE_NUMBER VARCHAR2(35),
  ROW_VERSION NUMBER default 0 not null,
  NOTES CLOB,
  CONTACT_NAME VARCHAR2(200),
  CREATED_DATETIME DATE not null,
  CREATED_BY_USER_ID NUMBER not null,
  LAST_UPDATED_DATETIME DATE not null,
  LAST_UPDATED_USER_ID NUMBER not null,
  TRAINING_SESSION_ID NUMBER,
  PROBATION_AREA_ID NUMBER not null
    references PROBATION_AREA,
  DISTRICT VARCHAR2(35),
  constraint XAK1OFFICE_LOCATION
    unique (CODE, TRAINING_SESSION_ID, OFFICE_LOCATION_ID),
  constraint PROVIDER_LOCATION_DATE_VALID6
    check ( (
        (START_DATE <= END_DATE) OR (END_DATE IS NULL)
      ))
);